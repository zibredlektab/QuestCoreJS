<?xml version="1.0" encoding="UTF-8"?>
<area>
	<room id="kitchen">
		<view id="n"></view>
		<view id="e">
			<object id="safe" x="720" y="460" width="575" height="575">
				<onclick action="view" id="safe"></onclick>
			</object>
		</view>
		<view id="s">
			<fwd-room>foyer</fwd-room>
		</view>
		<view id="w">
			<object type="image" id="ink" x="620" y="505" width="75" height="81" switch="digit0">
				<state value="0"></state>
				<onclick action="popup" img="ink" caption="it's an ink bottle"></onclick>
			</object>
		</view>
		<view type="object" id="safe">
			<object id="digit0-up" x="720" y="460" width="575" height="575">
				<onclick action="add" switch="digit0" value="1"></onclick>
			</object>
			<object type="text" id="digit0-text" x="720" y="460" switch="digit0">
				<state value="5">FIVE</state>
				<state value="2">ziggity bop-bop</state>
			</object>
		</view>
	</room>
	<room id="foyer">
		<view id="n">
			<fwd-room>kitchen</fwd-room>
		</view>
		<view id="e"></view>
		<view id="s"></view>
		<view id="w"></view>
	</room>
</area>


<!-- valid object types are:

* (default) *
	if no type is specified, object is an invisible square (useful when objects are actually drawn into the background image)

* image *
	an image object (the source image is named "[room id]-[object id].png" by default)

* text *
	draws dynamic text in the view

if a "switch" is specified for an object, then the object's state is determined by that switch.
	for a text object, this is simple - the state of the switch is the text content
	for an image, the same idea works, [room id]-[object id][switch state].png

	but, it's also possible to use <state> children to specify different states for any object type:

		<state value="[switch value]">new state</state>

	which will use "new state" as the text value or "[room id]-[object id]new state.png" as the image.

	be aware that as of right now, onclicks are not affected by states.


valid onlcick actions are:

* view *
	navigates the view to an object view (providing a "back" nav button)

* popup *
	creates a popup box with an item icon & caption

* add, subtract, set *
	basic manipulations of the specified switch


-->
